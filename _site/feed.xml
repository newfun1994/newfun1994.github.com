<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Newfun</title>
    <description>为什么要写博客,梦想、技术、热爱。或许是不想让自己闲着,我怕闲下来手就犯贱,脸会不自觉的贴在镜子上, 手会不自觉的贴在脸上挤痘痘,94年正青春。&lt;/br&gt;专注于React Native、iOS开发，欢迎交流。 &lt;/br&gt;--newfun.上海.2016年3月6日
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 26 Mar 2016 14:51:27 +0800</pubDate>
    <lastBuildDate>Sat, 26 Mar 2016 14:51:27 +0800</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>React Native 天气查询</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;天气查询&lt;/h3&gt;

&lt;p&gt;实现效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160326/img.png&quot; alt=&quot;实现效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;技术点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;http请求&lt;/li&gt;
  &lt;li&gt;自定义字体&lt;/li&gt;
  &lt;li&gt;NavigatorIOS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本文主要介绍如何使用React-Native实现一个查询天气的小demo&lt;/p&gt;

&lt;p&gt;首先创建工程 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native init RNWeather&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;环境还没搭建的请自行谷歌，这里不多做介绍&lt;/p&gt;

&lt;p&gt;应为我们要使用到&lt;code class=&quot;highlighter-rouge&quot;&gt;NavigatorIOS&lt;/code&gt;所以index.ios.js作为工程的入口，虽然整个工程就两个文件。&lt;/p&gt;

&lt;p&gt;创建查询天气文件&lt;code class=&quot;highlighter-rouge&quot;&gt;weatherView.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;并在index.ios.js里面先导入&lt;code class=&quot;highlighter-rouge&quot;&gt;weatherView.js&lt;/code&gt;文件&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import Index from &#39;./weatherView&#39;;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//index.ios.js
class RNWeather extends Component {
  render() {
    return (
      &amp;lt;NavigatorIOS
        style={styles.container}
        initialRoute=/&amp;gt;
    );
  }
}
const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
});	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意:&lt;/code&gt;用NavigatorIOS一定要设置&lt;code class=&quot;highlighter-rouge&quot;&gt;style={ {flex: 1} }&lt;/code&gt;, 否则不会显示任何内容&lt;/p&gt;

&lt;p&gt;接下来构建&lt;code class=&quot;highlighter-rouge&quot;&gt;weatherView.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;列举一下所需要的基本控件&lt;code class=&quot;highlighter-rouge&quot;&gt;Text&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;TextInput&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;TouchableOpacity&lt;/code&gt;(按钮)&lt;/p&gt;

&lt;p&gt;下面开始布局，关于布局，react native里面只支持横向布局和纵向布局(默认)，这两种组合起来基本可以实现大部分app的页面&lt;/p&gt;

&lt;p&gt;查询天气的界面主要分为两个大部分，第一部分是输入框和按钮，第二部分是显示天气状况和温度，这两个部分是采用横向布局&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//整体布局
&amp;lt;View style={styles.container}&amp;gt;
  ...
&amp;lt;/View&amp;gt;
//样式
const styles = StyleSheet.create({
  container: {
  marginTop: 65,
  padding: 8,
  },
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;整体布局设置&lt;code class=&quot;highlighter-rouge&quot;&gt;marginTop: 65&lt;/code&gt;否则会被标题栏挡住64像素内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//searchBar搜索框
&amp;lt;View style={styles.searchBar}&amp;gt;
  &amp;lt;TextInput
    style={styles.cityNameInput}
    onChangeText={(cityName) =&amp;gt; this.setState({ cityName }) }
    value={this.state.cityName}
    clearButtonMode=&#39;while-editing&#39;
    placeholder=&#39;请输入城市名称&#39;
    /&amp;gt;
  &amp;lt;TouchableOpacity style={styles.button}
    onPress={() =&amp;gt; this.fetchData() }&amp;gt;
    &amp;lt;Text style={styles.buttonText}&amp;gt;
      查询
    &amp;lt;/Text&amp;gt;
  &amp;lt;/TouchableOpacity&amp;gt;
&amp;lt;/View&amp;gt;  

//样式
  searchBar: {
    height: 30,
    flexDirection: &#39;row&#39;,
  },
  cityNameInput: {
	height: 30,
	flex: 9,
	borderColor: &#39;#00BFFF&#39;,
	borderWidth: 1,
	paddingLeft: 6,
  },
  button: {
    height: 30,
    flex: 1,
    backgroundColor: &#39;#00BFFF&#39;,
    justifyContent: &#39;center&#39;
  },
  buttonText: {
    fontSize: 14,
    color: &#39;#FFFFFF&#39;,
    alignSelf: &#39;center&#39;
  },
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;横向布局设置&lt;code class=&quot;highlighter-rouge&quot;&gt;flexDirection: &#39;row&#39;&lt;/code&gt;即可，通过&lt;code class=&quot;highlighter-rouge&quot;&gt;flex&lt;/code&gt;设置视图比例&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//weatherView天气状况和温度
&amp;lt;View style={styles.weatherView}&amp;gt;
 &amp;lt;View style={styles.weatherLeftView}&amp;gt;
   &amp;lt;Text style={styles.weatherText}&amp;gt;
     {this.state.weather}
   &amp;lt;/Text&amp;gt;
 &amp;lt;/View&amp;gt;
 &amp;lt;View style={styles.weatherRightView}&amp;gt;
   &amp;lt;Text style={styles.weatherTemp}&amp;gt;
     当前温度：{this.state.nowTemp}{&#39;\n&#39;}
     最低温度：{this.state.minTemp}{&#39;\n&#39;}
     最高温度：{this.state.maxTemp}
   &amp;lt;/Text&amp;gt;
 &amp;lt;/View&amp;gt;
&amp;lt;/View&amp;gt;

//样式
weatherView: {
  height: 160,
  marginTop: 10,
  flexDirection: &#39;row&#39;,
  },
weatherLeftView: {
  flex: 1,
  justifyContent: &#39;center&#39;,
  alignItems: &#39;center&#39;,
  backgroundColor: &#39;#ffffcc&#39;,
},
weatherRightView: {
  flex: 1,
  justifyContent: &#39;center&#39;,
  alignItems: &#39;center&#39;,
  backgroundColor: &#39;#ffccff&#39;,
},
weatherText: {
  fontSize: 40,
  fontFamily: &#39;MF LiHei (Noncommercial)&#39;,
},
weatherTemp: {
  fontFamily: &#39;MF LiHei (Noncommercial)&#39;,
  fontSize: 20,
},
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;布局到此就结束了&lt;/p&gt;

&lt;p&gt;接下来进行网络请求，通过&lt;code class=&quot;highlighter-rouge&quot;&gt;TouchableOpacity&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;onPress&lt;/code&gt;属性，调用方法
&lt;code class=&quot;highlighter-rouge&quot;&gt;onPress={() =&amp;gt; this.fetchData() }&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//首先各个内容默认值
constructor(props) {
  super(props);
  this.state = {
    weather: &#39;天气&#39;,
    nowTemp: 0,
    maxTemp: 0,
    minTemp: 0,
    cityName: &#39;上海&#39;,
  };
}

//网络交互
var REQUEST_URL = &#39;https://apis.baidu.com/apistore/weatherservice/cityname?cityname=&#39;;

fetchData() {
  fetch(REQUEST_URL + this.state.cityName, {
    method: &#39;GET&#39;,
    headers: {
      &#39;apikey&#39;: &#39;75f2768bec9b29f46b3104586e1a724b&#39;
    }
  })
    .then((response) =&amp;gt; response.json())
    .then((responseData) =&amp;gt; {
      this.setState({
        weather: responseData.retData.weather,
        nowTemp: responseData.retData.temp,
        minTemp: responseData.retData.l_tmp,
        maxTemp: responseData.retData.h_tmp,
      });
    })
    .done();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里调用百度APIStore的一个接口&lt;/p&gt;

&lt;p&gt;未完待续，code在 &lt;a href=&quot;https://github.com/newfun1994/React-Native-Example&quot;&gt;React-Native-Example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;–newfun.上海.2016年3月25日&lt;/p&gt;

</description>
        <pubDate>Fri, 25 Mar 2016 07:07:06 +0800</pubDate>
        <link>http://yourdomain.com/react-native/2016/03/25/React-Native-RNWeather.html</link>
        <guid isPermaLink="true">http://yourdomain.com/react-native/2016/03/25/React-Native-RNWeather.html</guid>
        
        
        <category>React-Native</category>
        
      </item>
    
      <item>
        <title>React Native IDE之VSCode</title>
        <description>&lt;p&gt;接触React Native有一段时间了，但是一直都在寻找优秀的好用的IDE，直到发现VSCode
在这之前使用了Atom，Sublime，WebStorm，还有一款比较期待的IDE： DECO看官网还是比较激动的，现在貌似还没有出来，要邀请别人注册好像才能下载。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/1.gif&quot; alt=&quot;DECO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来开始介绍并安装VSCode&lt;/p&gt;

&lt;p&gt;为什么要推荐VSCode，针对React Native原因有以下几点&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;不要需要开启xcode直接打开并运行iOS模拟器&lt;/li&gt;
  &lt;li&gt;启动app时IDE会自己打开nam服务，不用额外打开终端&lt;/li&gt;
  &lt;li&gt;React Native代码自动补全&lt;/li&gt;
  &lt;li&gt;可以断点调试，简直炸&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;vscode&quot;&gt;VSCode的安装与使用&lt;/h3&gt;

&lt;p&gt;官网地址：&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;step1vscode&quot;&gt;step1：下载并安装VSCode&lt;/h4&gt;

&lt;p&gt;解压后直接可以打开使用，无需安装，摒弃了微软一向安装麻烦的特点，这一点的进步值得表扬。&lt;/p&gt;

&lt;p&gt;界面很简洁，暗黑系列的风格&lt;/p&gt;

&lt;p&gt;软件有最近工作区，人性化设计，不用每次都点开目录去寻找文件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/2.png&quot; alt=&quot;主界面&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;step2react-native-&quot;&gt;step2：安装React Native 插件&lt;/h4&gt;
&lt;p&gt;打开VSCode 按F1键，输入install选择Install Extension&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/3.png&quot; alt=&quot;安装插件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;稍等片刻，不要切换软件，不然会消失。&lt;/p&gt;

&lt;p&gt;出现如图界面找到react native tools安装，或者直接在后面输入react搜索点击&lt;img src=&quot;http://newfun1994.github.io/image/20160310/download.png&quot; alt=&quot;download&quot; /&gt;安装&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/4.png&quot; alt=&quot;安装插件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装成功后手动重启软件，打开ios.index.js文件看右下角选择JavaScript，看看是否如图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/5.png&quot; alt=&quot;salsa&quot; /&gt;出现salsa标志，ok安装完成。&lt;/p&gt;

&lt;h4 id=&quot;step3&quot;&gt;step3：调试环境配置&lt;/h4&gt;

&lt;p&gt;点击左侧&lt;img src=&quot;http://newfun1994.github.io/image/20160310/6.png&quot; alt=&quot;debug&quot; /&gt;按钮，点击左上角&lt;img src=&quot;http://newfun1994.github.io/image/20160310/7.png&quot; alt=&quot;setting&quot; /&gt;选择React Native&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/8.png&quot; alt=&quot;reactantive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果不幸选错，不要紧张，打开工程目录，删除.vscode/launch.json 即可重新选择&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/9.png&quot; alt=&quot;launch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/10.png&quot; alt=&quot;debugiOS&quot; /&gt;选择Debug的手机系统，到此环境的配置已经全部结束。&lt;/p&gt;

&lt;h4 id=&quot;step4&quot;&gt;step4：运行工程&lt;/h4&gt;

&lt;p&gt;按F1键 输入iOS选择Run iOS&lt;/p&gt;

&lt;p&gt;IDE会自己开启npm服务并打开iOS模拟器
接下来就可以愉快地的coding啦&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意：编译后会在iOS工程目录下会生产build目录，有100+M&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;step5debug&quot;&gt;step5：Debug&lt;/h4&gt;

&lt;p&gt;点击&lt;img src=&quot;http://newfun1994.github.io/image/20160310/6.png&quot; alt=&quot;Debug&quot; /&gt;进入Debug模式，点击&lt;img src=&quot;http://newfun1994.github.io/image/20160310/12.png&quot; alt=&quot;run&quot; /&gt;开始调试&lt;/p&gt;

&lt;p&gt;直接打断点，鼠标悬停，数据直接显示&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意：目前发现有时候无法进入Debug模式，不行就重新Debug&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://newfun1994.github.io/image/20160310/13.png&quot; alt=&quot;BreakPoint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;小编还会坚定不移的寻找优秀的IDE。。。&lt;/p&gt;

&lt;p&gt;文笔不好，给您带来不便，尽请谅解，欢迎交流。邮箱在下面哦。&lt;/p&gt;

&lt;p&gt;–newfun.上海.2016年3月10日&lt;/p&gt;

</description>
        <pubDate>Thu, 10 Mar 2016 15:59:06 +0800</pubDate>
        <link>http://yourdomain.com/react-native/2016/03/10/React-Native-IDE%E4%B9%8BVSCode.html</link>
        <guid isPermaLink="true">http://yourdomain.com/react-native/2016/03/10/React-Native-IDE%E4%B9%8BVSCode.html</guid>
        
        
        <category>React-Native</category>
        
      </item>
    
      <item>
        <title>写给大学生</title>
        <description>&lt;p&gt;这是我的第一篇博客，撰写这篇文章的时候我还没有毕业，写这篇文章的目的是给那些可爱的即将毕业成为程序猿(媛)
的学弟学妹们一些过来人的建议。&lt;/p&gt;

&lt;p&gt;在我大一的时候，在空间里面看到有很多同学发表大学好无聊，我认为这不是一个正常的状态，大学是你进入社会的最后的
一个阶段，如果你在这段时间里面不好好奋斗，社会凭什么要你,看脸？拼爹？轮不到你吧。不要把过多的时间浪费在游戏
上，尤其是国内的游戏，给人带来的不是正确的价值观，游戏可以玩。当然最理想的状态是，你在专业方面很优秀，同时在
游戏上也很卓越，这走到哪里都会为你加分，如果专业知识不足，那我认为你还是不要浪费这仅有的四年时间。四年下来我
不敢发誓我没有浪费时间，但是我可以保证比80%的人勤奋(当然不是在学科上，这是我遗憾的地方)。&lt;/p&gt;

&lt;p&gt;先谈谈我遗憾的一些地方，希望你们不要学我这些不好的方面。首先是我前面刚刚提到的学科，什么数据结构、离散数学、
数据库原理、计算机组成原理、汇编、操作系统(这个学的还可以)都没有好好学，的确我承认这些课普遍比较无聊( 也许
是中国的教育方式，但是不能怪第三方因素，得在自己身上找原因，还是当初没有好好重视)，考试都是靠一周的突击，但
是在我找工作的时候，我发现公司笔试面试专门考这些东西，于是在找工作的期间又狠狠的恶补了一下。四年下来我学了很
多东西，很杂，很不系统，课上学的&lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;C++&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt;以及自学的&lt;code class=&quot;highlighter-rouge&quot;&gt;PHP&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;android&lt;/code&gt;、
&lt;code class=&quot;highlighter-rouge&quot;&gt;Objective-C&lt;/code&gt;甚至连&lt;code class=&quot;highlighter-rouge&quot;&gt;PhotoShop&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;After Effects&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;会声会影&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Prezi&lt;/code&gt;等软件都玩的很溜。这些许许多多
的原因加起来也许让我没有进入BAT（也有可能是天赋上的问题吧，我并没有表现出很出色的编程能力），阿里巴巴的笔试
真的是被鄙视了，IBM的面试也是被狠狠的鄙视了，这时候你才发现学好学科的重要性。也许是老天的眷顾，感谢，最终还
是进入了世界100强的公司。已经深夜了，下次再聊吧。&lt;/p&gt;

&lt;p&gt;这段时间在看《黑客与画家》，里面有一段话是这样写的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;许多人20出头的时感到非常的困惑和压抑。大学生活很有趣，可是已经过时了，上班的日子为什么会差距这么大？不要搞糊
涂了，你现在已经从顾客变成了仆人。在这种新的生活中获得乐趣是可能的。不过，你首先需要入门，门口的牌子写着“闲人
勿进”。这种转变是一种冲击，如果你还不赶快意识到这一点，事情将变得更糟。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这一段话写的&lt;code class=&quot;highlighter-rouge&quot;&gt;正青春&lt;/code&gt;，我周围就有很多同学正是出现上面所说的困惑于压抑，有的同学意识到的比较早，于是付出了行动，
并坚持着，最总也获得了应有的回报。有的同学也意识到了，却一如既往的过着顾客的生活。我相信每个人都考虑过自己的
未来，当你意识到这一点的时候，你是否为自己做出改变，至于付出了多少，坚持了多久这就看你想要得到多少。“再牛逼的
梦想,也抵不住&lt;big&gt;傻逼&lt;/big&gt;似得坚持”(耐人寻味，不合常理)。但是失败往往是因为放弃的太早。在&lt;code class=&quot;highlighter-rouge&quot;&gt;正青春&lt;/code&gt;的时候
不要让自己过得太安逸。&lt;/p&gt;

&lt;p&gt;当然当你意识到这一点的时候，并为自己而改变，并且坚持下去，那这个时候都不算晚。要相信世界永远是美好的。&lt;/p&gt;

&lt;p&gt;2016年3月9日今天是值得我们兴奋的一天，因为程序猿 &lt;del&gt;写的程序&lt;/del&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;AlphaGo&lt;/code&gt;)战胜了韩国棒子(李世石)，
这是要上演&lt;code class=&quot;highlighter-rouge&quot;&gt;猩球崛起&lt;/code&gt;的节奏啊。终于我们程序猿又达到了一个新的高度，难道我们不应该为此而感到兴奋和尖叫吗？单身
妹子们还在追韩国棒子吗，还不赶快找个程序猿，我相信在不久的将来我们猿就会统治The Whole World，你就将成为王
的女人。为了这一天到来还不赶快去&lt;code class=&quot;highlighter-rouge&quot;&gt;coding&lt;/code&gt;加油。&lt;/p&gt;

&lt;p&gt;本篇文章持续更新。文笔不好，给您带来不便，尽请谅解，欢迎交流。邮箱在下面哦。&lt;/p&gt;

&lt;p&gt;–newfun.上海.2016年3月6日&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Mar 2016 15:59:06 +0800</pubDate>
        <link>http://yourdomain.com/%E9%9A%8F%E7%AC%94/2016/03/06/%E5%86%99%E7%BB%99%E5%A4%A7%E5%AD%A6%E7%94%9F.html</link>
        <guid isPermaLink="true">http://yourdomain.com/%E9%9A%8F%E7%AC%94/2016/03/06/%E5%86%99%E7%BB%99%E5%A4%A7%E5%AD%A6%E7%94%9F.html</guid>
        
        
        <category>随笔</category>
        
      </item>
    
  </channel>
</rss>
